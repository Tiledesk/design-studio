export enum TYPE_METHOD_REQUEST {
    GET         = 'GET', 
    POST        = 'POST', 
    PUT         = 'PUT',
    PATCH       = 'PATCH',
    DELETE      = 'DELETE', 
    COPY        = 'COPY', 
    HEAD        = 'HEAD',
    OPTIONS     = 'OPTIONS',
    LINK        = 'LINK', 
    UNLINK      = 'UNLINK', 
    PURGE       = 'PURGE',
    LOCK        = 'LOCK',
    UNLOCK      = 'UNLOCK', 
    PROPFIND    = 'PROPFIND', 
    VIEW        = 'VIEW'
}

export const HEADER_TYPE: Array<{ label: string, value: string }> = [
    { label: "Accept", value: "Accept" },
    { label: "Accept-Charset", value: "Accept-Charset" },
    { label: "Accept-Encoding", value: "Accept-Encoding" },
    { label: "Accept-Language", value: "Accept-Language" },
    { label: "Access-Control-Request-Headers", value: "Access-Control-Request-Headers" },
    { label: "Access-Control-Request-Method", value: "Access-Control-Request-Method" },
    { label: "Authorization", value: "Authorization" },
    { label: "Cache-Control", value: "Cache-Control" },
    { label: "Connection", value: "Connection" },
    { label: "Content-MD5", value: "Content-MD5" },
    { label: "Content-Length", value: "Content-Length" },
    { label: "Content-Transfer-Encoding", value: "Content-Transfer-Encoding" },
    { label: "Content-Type", value: "Content-Type" },
    { label: "Cookie", value: "Cookie" },
    { label: "Cookie 2", value: "Cookie 2" },
    { label: "Date", value: "Date" },
    { label: "Expect", value: "Expect" },
    { label: "From", value: "From" },
    { label: "Host", value: "Host" },
    { label: "If-Match", value: "If-Match" },
    { label: "If-Modified-Since", value: "If-Modified-Since" },
    { label: "If-None-Match", value: "If-None-Match" },
    { label: "If-Range", value: "If-Range" },
    { label: "If-Unmodified-Since", value: "If-Unmodified-Since" },
    { label: "Keep-Alive", value: "Keep-Alive" },
    { label: "Max-Forwards", value: "Max-Forwards" },
    { label: "Origin", value: "Origin" },
    { label: "Pragma", value: "Pragma" },
    { label: "Proxy-Authorization", value: "Proxy-Authorization" },
    { label: "Range", value: "Range" },
    { label: "Referer", value: "Referer" },
    { label: "TE", value: "TE" },
    { label: "Trailer", value: "Trailer" },
    { label: "Transfer-Encoding", value: "Transfer-Encoding" },
    { label: "Upgrade", value: "Upgrade" },
    { label: "User-Agent", value: "User-Agent" },
    { label: "Via", value: "Via" },
    { label: "Warning", value: "Warning" },
    { label: "X-Requested-With", value: "X-Requested-With" },
    { label: "X-Do-Not-Track", value: "X-Do-Not-Track" },
    { label: "DNT", value: "DNT" },
    { label: "x-api-key", value: "x-api-key" },
    { label: "x-mock-match-request-body", value: "x-mock-match-request-body" },
    { label: "x-mock-match-request-headers", value: "x-mock-match-request-headers" },
    { label: "x-mock-response-id", value: "x-mock-response-id" },
    { label: "x-mock-response-name", value: "x-mock-response-name" },
    { label: "x-mock-response-code", value: "x-mock-response-code" },
    { label: "x-mock-response-delay", value: "x-mock-response-delay" },
]

export const RESPONSE_STATUS_TYPE: Array<{ label: string, value: string }> = [
    { label: "100 Continue",                                    value:"100"},
    { label: "101 Switching Protocols",                         value:"101"},
    { label: "102 Processing",                                  value:"102"},
    { label: "103 Early Hints",                                 value:"103"},
    { label: "200 OK",                                          value:"200"},
    { label: "201 Created",                                     value:"201"},
    { label: "202 Accepted",                                    value:"202"},
    { label: "203 Non-Authoritative Information",               value:"203"},
    { label: "204 No Content",                                  value:"204"},
    { label: "205 Reset Content",                               value:"205"},
    { label: "206 Partial Content",                             value:"206"},
    { label: "207 Multi-Status",                                value:"207"},
    { label: "208 Already Reported",                            value:"208"},
    { label: "300 Multiple Choices",                            value:"300"},
    { label: "301 Moved Permanently",                           value:"301"},
    { label: "302 Found (Previously 'Moved temporarily')",      value:"302"},
    { label: "303 See Other",                                   value:"303"},
    { label: "304 Not Modified",                                value:"304"},
    { label: "305 Use Proxy",                                   value:"305"},
    { label: "306 Switch Proxy",                                value:"306"},
    { label: "307 Temporary Redirect",                          value:"307"},
    { label: "308 Permanent Redirect",                          value:"308"},
    { label: "400 Bad Request",                                 value:"400"},
    { label: "401 Unauthorized",                                value:"401"},
    { label: "402 Payment Required",                            value:"402"},
    { label: "403 Forbidden",                                   value:"403"},
    { label: "404 Not Found",                                   value:"404"},
    { label: "405 Method Not Allowed",                          value:"405"},
    { label: "406 Not Acceptable",                              value:"406"},
    { label: "407 Proxy Authentication Required",               value:"407"},
    { label: "408 Request Timeout",                             value:"408"},
    { label: "409 Conflict",                                    value:"409"},
    { label: "410 Gone",                                        value:"410"},
    { label: "411 Length Required",                             value:"411"},
    { label: "412 Precondition Failed",                         value:"412"},
    { label: "413 Payload Too Large",                           value:"413"},
    { label: "414 URI Too Long",                                value:"414"},
    { label: "415 Unsupported Media Type",                      value:"415"},
    { label: "416 Range Not Satisfiable",                       value:"416"},
    { label: "417 Expectation Failed",                          value:"417"},
    { label: "418 I'm a teapot",                                value:"418"},
    { label: "421 Misdirected Request",                         value:"421"},
    { label: "422 Unprocessable Content",                       value:"422"},
    { label: "423 Locked",                                      value:"423"},
    { label: "424 Failed Dependency",                           value:"424"},
    { label: "425 Too Early",                                   value:"425"},
    { label: "426 Upgrade Required",                            value:"426"},
    { label: "428 Precondition Required",                       value:"428"},
    { label: "429 Too Many Requests",                           value:"429"},
    { label: "431 Request Header Fields Too Large",             value:"431"},
    { label: "451 Unavailable For Legal Reasons",               value:"451"},
    { label: "500 Internal Server Error",                       value:"500"},
    { label: "501 Not Implemented",                             value:"501"},
    { label: "502 Bad Gateway",                                 value:"502"},
    { label: "503 Service Unavailable",                         value:"503"},
    { label: "504 Gateway Timeout",                             value:"504"},
    { label: "505 HTTP Version Not Supported",                  value:"505"},
    { label: "506 Variant Also Negotiates",                     value:"506"},
    { label: "507 Insufficient Storage",                        value:"507"},
    { label: "508 Loop Detected",                               value:"508"},
    { label: "510 Not Extended",                                value:"510"},
    { label: "511 Network Authentication Required",             value:"511"},
]